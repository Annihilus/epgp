{"version":3,"sources":["./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/environments/environment.ts","./src/app/service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/players-list/players-list.component.ts","./src/app/players-list/players-list.component.html","./src/app/app.module.ts","./src/app/players-add-dialog/players-add-dialog.component.ts","./src/app/players-add-dialog/players-add-dialog.component.html","./src/app/players-list-item/players-list-item.component.ts","./src/app/players-list-item/players-list-item.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { epgpService } from '../service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  public formGroup!: FormGroup;\n\n  constructor(\n    private _builder: FormBuilder,\n    private _service: epgpService,\n  ) { }\n\n  ngOnInit(): void {\n    const settings = this._service.settings;\n\n    this.formGroup = this._builder.group({\n      minGP: settings.minGP,\n      weekEP: settings.weekEP,\n      decay: settings.decay,\n    });\n\n    this._service.settings = this.formGroup.getRawValue();\n\n    this.formGroup\n      .valueChanges\n      .subscribe(data => {\n        for (const [key, value] of Object.entries(data)) {\n          if (typeof value === 'string') {\n            data[key] = parseInt(value, 0);\n          }\n\n          if (value === null) {\n            data[key] = 0;\n          }\n        }\n\n        this._service.settings = data;\n      });\n  }\n}\n","<div class=\"form\" [formGroup]=\"formGroup\">\n  <div class=\"field\">\n    <mat-form-field class=\"minGP\">\n      <mat-label floatLabel>Минимальное GP</mat-label>\n      <input matInput formControlName=\"minGP\" required>\n    </mat-form-field>\n  </div>\n  <div class=\"field\">\n    <mat-form-field class=\"weekEP\">\n      <mat-label floatLabel>Недельное еп</mat-label>\n      <input matInput formControlName=\"weekEP\" required>\n    </mat-form-field>\n  </div>\n  <div class=\"field\">\n    <mat-form-field class=\"decay\">\n      <mat-label floatLabel>Дикей</mat-label>\n      <input matInput formControlName=\"decay\" required>\n    </mat-form-field>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface settingsParams {\n  minGP: number,\n  decay: number,\n  weekEP: number,\n}\n\nexport interface playerData {\n  placement: number;\n  name: string;\n  description: string;\n  ep: number;\n  gp: number;\n  pr: number;\n}\n\nconst ELEMENT_DATA: any[] = [\n  {placement: 3, name: 'Солист', description: 'Солит на пухи', ep: 500, gp: 10, pr: 50},\n  {placement: 1, name: 'Новичок', description: '', ep: 0, gp: 10, pr: 15},\n  {placement: 2, name: 'Ветеран', description: '', ep: 500, gp: 100, pr: 5},\n  {placement: 4, name: 'Пылесос', description: '', ep: 500, gp: 225, pr: 2},\n];\n\n@Injectable()\nexport class epgpService {\n\n\n  public set settings(params: settingsParams) {\n    this._settings = params;\n  }\n\n  public get settings(): settingsParams {\n    return this._settings;\n  }\n\n  private _settings: settingsParams = {\n    minGP: 10,\n    decay: 10,\n    weekEP: 150,\n  };\n\n  public players: BehaviorSubject<any> = new BehaviorSubject<any>(ELEMENT_DATA);\n\n  public data: BehaviorSubject<any> = new BehaviorSubject<any>([ELEMENT_DATA]);\n\n  public decay() {\n    const data = this.data.getValue();\n    const updatedPlayers = [];\n    const lastWeek = data[data.length - 1];\n\n    for (const player of lastWeek) {\n      let updatedPlayer = this.decayPlayer({...player});\n      updatedPlayer = this.weeklyEp(updatedPlayer);\n\n      updatedPlayers.push(updatedPlayer);\n    }\n\n    const sortedPlayers = this.sortByPr(updatedPlayers);\n\n    this.data.next([...this.data.getValue(), sortedPlayers]);\n  }\n\n  public addPlayer(data: playerData, index: number) {\n    const player = data;\n\n    player.placement = 100;\n    player.gp = this._settings.minGP;\n    player.pr = this.calcPR(player.ep, player.gp);\n\n    this.players.next([...this.players.getValue(), player]);\n\n    const updatedData = [];\n\n    for (const [i, array] of this.data.getValue().entries()) {\n      if (i >= index) {\n        const updatedPlayer = this.decayPlayer({...player}, i);\n        let result = [...array, updatedPlayer];\n\n\n        if (i === 0) {\n          result = this.sortByPr(result);\n        }\n\n        updatedData.push(result);\n\n        continue;\n      }\n\n      updatedData.push([...array]);\n    }\n\n    this.data.next(updatedData);\n  }\n\n  public editPlayer(oldName: string, index: number, data: any) {\n    const players = this.data.getValue()[index]\n      .filter((x : any) => x.name !== oldName);\n\n    if (!data) {\n      return;\n    }\n\n    data.pr = this.calcPR(data.ep, data.gp);\n\n    const currentWeekUpdated = [...players, data];\n    const updatedData = [];\n\n    for (const [i, array] of this.data.getValue().entries()) {\n      if (i === index) {\n        updatedData.push(currentWeekUpdated);\n\n        continue;\n      }\n\n      if (i > index) {\n        const filtered = array\n          .filter((x : any) => x.name !== oldName);\n        const modifier = i - index;\n        const updatedPlayer = this.decayPlayer({...data}, modifier);\n        let result = [...filtered, updatedPlayer];\n\n        if (i === 0) {\n          result = this.sortByPr(result);\n        }\n\n        updatedData.push(result);\n\n        continue;\n      }\n\n      updatedData.push([...array]);\n    }\n\n    this.data.next(updatedData);\n  }\n\n  public weeklyEp(player) {\n    player.ep += this._settings.weekEP;\n\n    return player;\n  }\n\n  public decayPlayer(player: playerData, multiplier: number = 1) {\n    if (multiplier === 0) {\n      return player;\n    }\n\n    player.ep = Number((player.ep - (player.ep / 100 * (this._settings.decay * multiplier))).toFixed(2));\n    const gp = Number((player.gp - (player.gp / 100 * (this._settings.decay * multiplier))).toFixed(2));\n\n    player.gp = Number(gp) < this._settings.minGP ? this._settings.minGP : gp;\n    player.pr = this.calcPR(player.ep, player.gp);\n\n    return player;\n  }\n\n  public calcPR(ep: number, gp: number): number {\n    return Number((ep / gp).toFixed(2));\n  }\n\n  public sortByPr(players: playerData[]): playerData[] {\n    return players.sort((a: any, b: any) => b.pr - a.pr);\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { epgpService } from './service';\n\nimport { PlayersAddDialogComponent } from './players-add-dialog/players-add-dialog.component';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'epgp';\n\n  public data: BehaviorSubject<any> = new BehaviorSubject([]);\n\n  public selected = new FormControl(0);\n\n  constructor(\n    private _service: epgpService,\n    private _dialog: MatDialog,\n  ) {}\n\n  public decay() {\n    this._service.decay();\n\n    this.selected.setValue(this.data.getValue().length - 1);\n  }\n\n  ngOnInit() {\n    this._service.data.subscribe(data => {\n      this.data.next(data);\n    });\n  }\n\n  public openAddingPlayerModal(index: number) {\n    const dialogRef = this._dialog\n      .open(PlayersAddDialogComponent, {\n        width: '270px',\n      });\n\n    dialogRef\n      .afterClosed()\n      .subscribe(data => {\n        this._service.addPlayer(data, index);\n      });\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  <span>EPGP Online</span>\n  <span class=\"example-spacer\"></span>\n</mat-toolbar>\n\n<mat-drawer-container class=\"wrapper\" [hasBackdrop]=\"true\">\n  <mat-drawer #drawer>\n    <app-settings></app-settings>\n  </mat-drawer>\n  <mat-drawer-content class=\"content\">\n    <div class=\"toolbar\">\n      <button mat-raised-button (click)=\"drawer.toggle()\">Настройки</button>\n      <button mat-raised-button (click)=\"decay()\">След. КД (списать и начислить)</button>\n    </div>\n    <mat-tab-group\n      [animationDuration]=\"0\"\n      [selectedIndex]=\"selected.value\"\n      (selectedIndexChange)=\"selected.setValue($event)\"\n    >\n      <mat-tab *ngFor=\"let item of data | async; let i = index\">\n        <ng-template mat-tab-label>Неделя {{ i + 1 }}</ng-template>\n        <app-players-list [index]=\"i\"></app-players-list>\n      </mat-tab>\n    </mat-tab-group>\n  </mat-drawer-content>\n</mat-drawer-container>\n\n<button (click)=\"openAddingPlayerModal(selected.value)\" class=\"addPlayer\" mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n  <mat-icon>add</mat-icon>\n</button>","import { Component, OnInit, ViewChild, AfterViewInit, Input } from '@angular/core';\n\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\n\nimport { epgpService, playerData } from '../service';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { PlayersAddDialogComponent } from '../players-add-dialog/players-add-dialog.component';\n\n@Component({\n  selector: 'app-players-list',\n  templateUrl: './players-list.component.html',\n  styleUrls: ['./players-list.component.scss']\n})\nexport class PlayersListComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(MatSort) sort!: MatSort;\n\n  @Input() public index: number = 0;\n\n  public data: MatTableDataSource<any> = new MatTableDataSource<any>([]);\n\n  public displayedColumns: string[] = ['name', 'description', 'ep', 'gp', 'pr', 'actions'];\n\n  constructor(\n    private _dialog: MatDialog,\n    private _service: epgpService,\n  ) { }\n\n  ngOnInit(): void {\n    this._service.data\n      .subscribe(data => {\n        this.data = new MatTableDataSource<any>(data[this.index]);\n        console.log(data);\n      })\n  }\n\n  ngAfterViewInit() {\n    this.data.sort = this.sort;\n  }\n\n  public changeParams(player: playerData) {\n    const dialogRef = this._dialog\n      .open(PlayersAddDialogComponent, {\n        width: '270px',\n        data: { player }\n      });\n\n    dialogRef\n      .afterClosed()\n      .subscribe(data => {\n        this._service.editPlayer(player.name, this.index, data);\n      });\n  }\n\n}\n","<div class=\"mat-elevation-z8\">\n  <table class=\"table\" mat-table [dataSource]=\"data\" matSort>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th class=\"name\" mat-header-cell *matHeaderCellDef mat-sort-header> Имя </th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n    </ng-container>\n\n    <!-- PR Column -->\n    <ng-container matColumnDef=\"description\">\n      <th class=\"desc\" mat-header-cell *matHeaderCellDef mat-sort-header> Описание </th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.description }}</td>\n    </ng-container>\n\n    <!-- EP Column -->\n    <ng-container matColumnDef=\"ep\">\n      <th class=\"param\" mat-header-cell *matHeaderCellDef mat-sort-header> EP </th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.ep }}</td>\n    </ng-container>\n\n    <!-- GP Column -->\n    <ng-container matColumnDef=\"gp\">\n      <th class=\"param\" mat-header-cell *matHeaderCellDef mat-sort-header> GP </th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.gp }}</td>\n    </ng-container>\n\n    <!-- PR Column -->\n    <ng-container matColumnDef=\"pr\">\n      <th class=\"param\" mat-header-cell *matHeaderCellDef mat-sort-header> PR </th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.pr }}</td>\n    </ng-container>\n\n    <!-- PR Column -->\n    <ng-container matColumnDef=\"actions\">\n      <th class=\"param\" mat-header-cell *matHeaderCellDef mat-sort-header></th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-button color=\"primary\" (click)=\"changeParams(element)\">Редактировать</button>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule} from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { epgpService } from './service';\nimport { PlayersListComponent } from './players-list/players-list.component';\nimport { PlayersListItemComponent } from './players-list-item/players-list-item.component';\nimport { PlayersAddDialogComponent } from './players-add-dialog/players-add-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SettingsComponent,\n    PlayersListComponent,\n    PlayersListItemComponent,\n    PlayersAddDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatDividerModule,\n    MatSelectModule,\n    MatIconModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatTabsModule\n  ],\n  providers: [\n    epgpService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { epgpService } from '../service';\n\nexport interface DialogData {\n  animal: string;\n  name: string;\n}\n\n@Component({\n  selector: 'app-players-add-dialog',\n  templateUrl: './players-add-dialog.component.html',\n  styleUrls: ['./players-add-dialog.component.scss']\n})\nexport class PlayersAddDialogComponent implements OnInit {\n\n  public formGroup!: FormGroup;\n\n  public player: any;\n\n  constructor(\n    private _builder: FormBuilder,\n    private _service: epgpService,\n    public dialogRef: MatDialogRef<PlayersAddDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n    const defaults = this._service.settings;\n    this.player = this.data ? (this.data as any).player : null;\n\n    if (!this.player) {\n      this.formGroup = this._builder.group({\n        name:  '',\n        ep: 0,\n        gp: defaults.minGP,\n        description: '',\n      });\n    } else {\n      this.formGroup = this._builder.group({\n        ep: this.player.ep || 0,\n        gp: this.player.gp || defaults.minGP,\n        description: this.player.description,\n      });\n    }\n\n    this.formGroup\n      .valueChanges\n      .subscribe(data => {\n        this.data = data;\n      });\n\n  }\n\n}\n","<h1 mat-dialog-title *ngIf=\"!player\">Добавление игрока</h1>\n<h1 mat-dialog-title *ngIf=\"player\">Редактивание {{ player.name }}</h1>\n<div mat-dialog-content>\n  <div [formGroup]=\"formGroup\">\n    <mat-form-field *ngIf=\"!player\" class=\"name\">\n      <mat-label floatLabel>Имя</mat-label>\n      <input matInput formControlName=\"name\" required>\n    </mat-form-field>\n    <mat-form-field class=\"ep\">\n      <mat-label floatLabel>EP</mat-label>\n      <input matInput formControlName=\"ep\" required>\n    </mat-form-field>\n    <mat-form-field class=\"gp\">\n      <mat-label floatLabel>GP</mat-label>\n      <input matInput formControlName=\"gp\" required>\n    </mat-form-field>\n    <mat-form-field class=\"description\">\n      <mat-label floatLabel>Description</mat-label>\n      <textarea matInput formControlName=\"description\"></textarea>\n    </mat-form-field>\n  </div>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onCancel()\">Отменить</button>\n  <button *ngIf=\"player\" mat-button [mat-dialog-close]=\"data\" color=\"primary\">Сохранить</button>\n  <button *ngIf=\"!player\" mat-button [mat-dialog-close]=\"data\" color=\"primary\">Добавить</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-players-list-item',\n  templateUrl: './players-list-item.component.html',\n  styleUrls: ['./players-list-item.component.scss']\n})\nexport class PlayersListItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>players-list-item works!</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}